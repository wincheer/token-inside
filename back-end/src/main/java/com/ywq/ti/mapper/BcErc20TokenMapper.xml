<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ywq.ti.dao.BcErc20TokenMapper">

  <resultMap id="BaseResultMap" type="com.ywq.ti.entity.BcErc20Token">
    <id column="token_address" jdbcType="VARCHAR" property="tokenAddress" />
    <result column="token_name" jdbcType="VARCHAR" property="tokenName" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="total_supply" jdbcType="VARCHAR" property="totalSupply" />
    <result column="decimals" jdbcType="BIGINT" property="decimals" />
    <result column="holders" jdbcType="BIGINT" property="holders" />
    <result column="transfers" jdbcType="BIGINT" property="transfers" />
  </resultMap>

  <select id="selectToken" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from bc_erc20_token
    where token_address = #{tokenAddress,jdbcType=VARCHAR}
  </select>
  
  <select id="totalTokens" parameterType="java.util.Map" resultType="java.lang.Long">
    select count(*) from bc_erc20_token
    where 1==1
    <trim prefix=" and (" suffix=")" suffixOverrides="and">
      <if test="tokenName != null">token_name = #{tokenName,jdbcType=VARCHAR} and </if>
      <if test="symbol != null">symbol = #{symbol,jdbcType=VARCHAR} and </if>
      <if test="totalSupply != null">total_supply = #{totalSupply,jdbcType=VARCHAR} and </if>
      <if test="decimals != null">decimals = #{decimals,jdbcType=BIGINT} and </if>
      <if test="holders != null">holders = #{holders,jdbcType=BIGINT} and </if>
      <if test="transfers != null">transfers = #{transfers,jdbcType=BIGINT} and </if>
	</trim>
  </select>
  
  <select id="selectTokenListPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from bc_erc20_token
    where 1==1
    <trim prefix=" and (" suffix=")" suffixOverrides="and">
      <if test="tokenName != null">token_name = #{tokenName,jdbcType=VARCHAR} and </if>
      <if test="symbol != null">symbol = #{symbol,jdbcType=VARCHAR} and </if>
      <if test="totalSupply != null">total_supply = #{totalSupply,jdbcType=VARCHAR} and </if>
      <if test="decimals != null">decimals = #{decimals,jdbcType=BIGINT} and </if>
      <if test="holders != null">holders = #{holders,jdbcType=BIGINT} and </if>
      <if test="transfers != null">transfers = #{transfers,jdbcType=BIGINT} and </if>
	</trim>
	limit #{start},#{pageSize}
  </select>
  
  <insert id="insertToken" parameterType="com.ywq.ti.entity.BcErc20Token">
    insert into bc_erc20_token 
    	(token_address, token_name, symbol, total_supply, decimals, holders,transfers)
    values 
    	(#{tokenAddress,jdbcType=VARCHAR}, #{tokenName,jdbcType=VARCHAR}, #{symbol,jdbcType=VARCHAR}, #{totalSupply,jdbcType=VARCHAR}, #{decimals,jdbcType=BIGINT}, #{holders,jdbcType=BIGINT}, #{transfers,jdbcType=BIGINT})
  </insert>
  
  <insert id="insertTokenBatch" useGeneratedKeys="false" keyProperty="tokenAddress" parameterType="java.util.List">
    insert into bc_erc20_token 
    	(token_address, token_name, symbol, total_supply, decimals, holders,transfers)
    values 
	  <foreach collection="list" item="item" index="index" separator="," >  
	      (#{item.tokenAddress,jdbcType=VARCHAR}, #{item.tokenName,jdbcType=VARCHAR}, #{item.symbol,jdbcType=VARCHAR}, #{item.totalSupply,jdbcType=VARCHAR}, #{item.decimals,jdbcType=BIGINT}, #{item.holders,jdbcType=BIGINT}, #{item.transfers,jdbcType=BIGINT})
	  </foreach>  
  </insert>
  
  <update id="updateToken" parameterType="com.ywq.ti.entity.BcErc20Token">
    update bc_erc20_token
    <set>
      <if test="tokenName != null">token_name = #{tokenName,jdbcType=VARCHAR},</if>
      <if test="symbol != null">symbol = #{symbol,jdbcType=VARCHAR},</if>
      <if test="totalSupply != null">total_supply = #{totalSupply,jdbcType=VARCHAR},</if>
      <if test="decimals != null">decimals = #{decimals,jdbcType=BIGINT},</if>
      <if test="holders != null">holders = #{holders,jdbcType=BIGINT},</if>
      <if test="transfers != null">transfers = #{transfers,jdbcType=BIGINT},</if>
    </set>
    where token_address = #{tokenAddress,jdbcType=VARCHAR}
  </update>
  
</mapper>