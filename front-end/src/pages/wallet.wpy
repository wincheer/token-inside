<template>
  <view class="page">
    <view class="page__hd">
        <input placeholder="输入钱包地址" confirm-type="search" bindconfirm="searchBtn" focus='ture'/>
    </view>
    <view class="page__bd page__bd_spacing">
        <view class="weui-cells__title">标签钱包</view>
        <view class="weui-panel weui-panel_access">
            <view class="weui-panel__bd">
                <repeat for="{{myWallets}}" key="index" index="index" item="item">
                  <view class="weui-panel__hd" bindtap="choseWallet" id="{{item.address}}">{{item.tag}}</view>
                </repeat>
            </view>
        </view>
        <view class="weui-tab">
            <view class="weui-navbar">
                <block wx:for="{{tabs}}" wx:key="*this">
                    <view id="{{index}}" class="weui-navbar__item {{activeIndex == index ? 'weui-bar__item_on' : ''}}" bindtap="tabClick">
                        <view class="weui-navbar__title">{{item}}</view>
                    </view>
                </block>
                <view class="weui-navbar__slider" style="left: {{sliderLeft}}px; transform: translateX({{sliderOffset}}px); -webkit-transform: translateX({{sliderOffset}}px);"></view>
            </view>
            <view class="weui-tab__panel" >
                <view class="weui-tab__content" hidden="{{activeIndex != 0}}">
                  <block wx:if="{{balanceOfEth != -1}}">  
                    <view class="weui-cell">
                      <view class="weui-cell__bd">Token名称</view>
                      <view class="weui-cell__ft">{{token}}</view>
                    </view>
                    <view class="weui-cell">
                      <view class="weui-cell__bd">余额</view>
                      <view class="weui-cell__ft">{{balanceOfEth}}</view>
                    </view>
                    <view class="weui-btn-area">
                      <picker bindchange="queryBalance" range="{{myTokens}}" range-key="tokenName">
                          <button type="default">其它Token余额</button>
                      </picker>                    
                    </view>
                    <view bindtap="goWalletTag" class="weui-cell__ft weui-cell__ft_in-access">给钱包打标签</view>
                  </block>
                </view>

                <view class="weui-tab__content" hidden="{{activeIndex != 1}}">
                    <repeat for="{{txList}}" key="index" index="index" item="item">
                      <view class="weui-media-box weui-media-box_text" bindtap="showTx" id="{{item.hash}}">
                        <view class="weui-media-box__title weui-media-box__title_in-text" bindtap="showTx" id="{{item.hash}}">{{item.timestamp}}</view>
                        <view class="weui-media-box__desc" bindtap="showTx" id="{{item.hash}}">{{item.value}} ({{item.symbol}})</view>
                      </view>
                    </repeat>
                </view>

                <view class="weui-tab__content" hidden="{{activeIndex != 2}}">
                  <repeat for="{{tokenTxList}}" key="index" index="index" item="item">
                    <view class="weui-media-box weui-media-box_text" bindtap="showTx" id="{{item.hash}}">
                      <view class="weui-media-box__title weui-media-box__title_in-text" bindtap="showTx" id="{{item.hash}}">{{item.timestamp}}</view>
                      <view class="weui-media-box__desc" bindtap="showTx" id="{{item.hash}}">{{item.value}} ({{item.symbol}})</view>
                    </view>
                  </repeat>
                </view>
            </view>
        </view>
    </view>
</view>
</template>

<script>
import wepy from 'wepy';
import { SELECT_WALLET_INFO } from '@/config/api.js';
import formatTime from '@/utils/timeFormatter.js';
export default class Wallet extends wepy.page {
  config = {
    navigationBarTitleText: 'TokenInside - 钱包',
  };
  data = {
    tabs: ['基本信息', '交易', 'Token交易'],
    activeIndex: 0,
    sliderOffset: 0,
    sliderLeft: 0,

    myWallets: [],
    myTokens: [],

    token: 'ETH',
    wallet_address: '',
    balanceOf: {},
    balanceOfEth: -1,
    txList: [],
    tokenTxList: []
  };
  methods = {};
  tabClick(e) {
    (this.sliderOffset = e.currentTarget.offsetLeft),
      (this.activeIndex = e.currentTarget.id);
  }
  queryBalance(e) {
    var myTokenAddress = this.myTokens[e.detail.value].tokenAddress;
    console.log(myTokenAddress);
  }
  addTag() {
    console.log('添加标签');
    wx.na;
  }
  searchBtn(e) {
    //检查钱包地址的合法性 0x开头，长度42
    if (e.detail.value.substr(0, 2) === '0x' && e.detail.value.length === 42) {
      this.selectWalletInfo(e.detail.value);
      //this.wallet_address = e.detail.value;
    } else {
      wx.showToast({ title: '钱包地址不合格', icon: 'none', duration: 2000 });
      //this.wallet_address = '';
    }
  }
  selectWalletInfo(wallet_address) {
    this.wallet_address = wallet_address;
    wx.showToast({
      title: '加载中',
      icon: 'loading',
      duration: 10000 //10秒
    });
    var _this = this;
    let params = {
      wallet_address: wallet_address
    };
    SELECT_WALLET_INFO(params).then(res => {
      wx.hideToast();
      _this.balanceOfEth = res.balanceOfEth;
      _this.txList = res.txList;
      _this.tokenTxList = res.tokenTxList;
      for (var tx of _this.tokenTxList) {
        tx.timestamp = formatTime.formatTime(
          Number(tx.timestamp),
          'Y-M-D h:m:s'
        );
      }
      for (var tx of _this.txList) {
        tx.timestamp = formatTime.formatTime(
          Number(tx.timestamp),
          'Y-M-D h:m:s'
        );
      }
      _this.$apply();
    });
  }
  choseWallet(e) {
    this.selectWalletInfo(e.target.id);
  }
  goWalletTag(e) {
    //前往打标签
    var tag = '';
    for (var _wallet of this.myWallets) {
      if (_wallet.address === this.wallet_address) {
        tag = _wallet.tag;
        break;
      }
    }
    wx.navigateTo({
      url: '/pages/wallet-tag?address=' + this.wallet_address + '&tag=' + tag
    });
  }
  showTx(e) {
    var selectedTx;
    for (var tx of this.tokenTxList) {
      if (tx.hash === e.target.id) {
        selectedTx = tx;
        break;
      }
    }
    for (var tx of this.txList) {
      if (tx.hash === e.target.id) {
        selectedTx = tx;
        break;
      }
    }
    wx.navigateTo({
      url:
        '/pages/tx-detail?token=' +
        selectedTx.symbol +
        '&from=' +
        selectedTx.from +
        '&to=' +
        selectedTx.to +
        '&value=' +
        selectedTx.value +
        '&datetime=' +
        selectedTx.timestamp
    });
  }
  //Page生命~周期
  onLoad() {
    // Do some initialize when page load.
  }
  onReady() {
    //queryTokenListPage();
  }
  onShow() {
    // 客户端 Wallet结构为{address:xxx,tag:yyy}
    this.myTokens = this.$parent.globalData.myTokens;
    this.myWallets = this.$parent.globalData.myWallets;
  }
  onHide() {
    // Do something when page hide.
  }
  onUnload() {
    // Do something when page close.
  }

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {}
}
</script>

<style lang="less">
.placeholder {
  margin: 5px;
  padding: 0 10px;
  text-align: center;
  background-color: #ebebeb;
  height: 2.3em;
  line-height: 2.3em;
  color: #cfcfcf;
}
</style>
