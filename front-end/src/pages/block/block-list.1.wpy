<template>
  <view class="page">
    <view class="page__hd">
        <form bindsubmit="searchBlock">
            <input placeholder="输入BlockHash或BlockNumber" name="searchKey" />
            <button formType="submit" >搜索</button>
        </form>
    </view>    
    <view class="page__bd">
        <view class="weui-panel weui-panel_access">
            <view class="weui-panel__hd">区块</view>
            <view class="weui-panel__bd">
                <repeat for="{{blockList}}" key="index" index="index" item="item">
                    <navigator url="/pages/block/block-detail?number={{item.number}}&hash={{item.hash}}&coinbase={{item.coinbase}}&difficulty={{item.difficulty}}&gasLimit={{item.gasLimit}}&gasUsed={{item.gasUsed}}&timestamp={{item.timestamp}}" class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
                        <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
                            <view class="weui-media-box__title">Block {{item.number}}</view>
                            <view class="weui-media-box__desc">by {{item.coinbase}}</view>
                        </view>
                    </navigator>
                </repeat>
            </view>
        </view>
    </view>
</view>
</template>

<script>
import wepy from 'wepy';
import { SELECT_BLOCK_LIST_PAGE } from '@/config/api.js';
export default class BlockList extends wepy.page {
  data = {
    pageNo: 1,
    pageSize: 50,
    totalPages: 1,
    hasMoreData: true,
    queryObj: {},
    blockList: [],
    inputShowed: false,
    inputVal: ''
  };
  methods = {
    searchBlock(params) {
      var queryString = params.detail.value.searchKey.trim();
      if (queryString) {
        this.blockList = []
        if (queryString.substr(0, 2) == '0x')
          this.queryObj = { hash: queryString };
        else this.queryObj = { number: queryString };
      }else{
          this.pageNo = 1
          this.pageSize = 50
          this.totalPages = 1
          this.blockList = []
          this.queryObj = {}
      }
      this.queryBlockListPage();
    }
  };
  //Page生命~周期
  onLoad() {
    // Do some initialize when page load.
    this.queryBlockListPage();
  }
  onReady() {
    // Do something when page ready.
  }
  onShow() {
    
  }
  onHide() {
    // Do something when page hide.
  }
  onUnload() {
    // Do something when page close.
  }

  /**
   * 页面下拉刷新
   */
  onPullDownRefresh(){
    this.blockList = []
    this.queryBlockListPage();
  }
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom() {
    //TODO 这里来决定是否下拉分页
    //正常是 下一页，然后叠加查询结果到当前结果
    //如果是当前页是最后一页，不叠加，重新查询更新参数
    this.queryBlockListPage();
  }

  queryBlockListPage() {
    var _this = this;
    var params = {
      pageNo: _this.pageNo,
      pageSize: _this.pageSize
    };
    if (JSON.stringify(_this.queryObj)!='{}') 
        params = Object.assign({pageNo:1,pageSize:50,totalPages:1}, _this.queryObj);
    else
        console.log("默认查询")
    //if (_this.queryObj) params = _this.queryObj;
    SELECT_BLOCK_LIST_PAGE(params).then(res => {
      _this.totalPages = res.totalPages;
      if (_this.pageNo < _this.totalPages) {
        _this.pageNo = _this.pageNo + 1;
        _this.blockList = _this.blockList.concat(res.rows);
      } else {
        if (_this.blockList.length == 0) _this.blockList = res.rows;
      }
      _this.$apply();
    });
  }

  showInput() {
    this.inputShowed = true;
  }
  hideInput() {
    this.inputVal = '';
    this.inputShowed = false;
  }
  clearInput() {
    this.inputVal = '';
  }
  inputTyping(e) {
    this.inputVal = e.detail.value;
    console.log(e.detail.value);
  }
}
</script>

<style lang="less">
.placeholder {
  margin: 5px;
  padding: 0 10px;
  text-align: center;
  background-color: #ebebeb;
  height: 2.3em;
  line-height: 2.3em;
  color: #cfcfcf;
}
</style>
